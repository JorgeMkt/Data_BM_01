"0",""
"0","library(flextable)"
"0","#colors"
"0","col_palette <- c(""#D73027"", ""#DE7B2B"", ""#E7BB25"", ""#BFCF28"",  ""#1A9850""  )"
"0","col_palette <- c(""#1A9850"",  ""#BFCF28"", ""#E7BB25"", ""#DE7B2B"",  ""#D73027"" )"
"0",""
"0","#make the table"
"0","index_tab <- SPI %>%"
"0","  filter(date==2019) %>%"
"0","  select(country, SPI.INDEX,SPI.INDEX.DIM1,SPI.INDEX.DIM2,SPI.INDEX.DIM3,SPI.INDEX.DIM4,SPI.INDEX.DIM5) %>%"
"0","    mutate(across(starts_with('SPI.INDEX'),~1*.),"
"0","         across(starts_with('SPI.INDEX'),round,1)) "
"0",""
"0"," #calculate the breaks for the color coding"
"0","        brks <- quantile(index_tab$SPI.INDEX, probs=c(1,2,3,4)/5,na.rm=T)"
"0","        brks <- append(0,brks)"
"0","        brks <- append(brks,100)"
"0",""
"0","        brks1 <- quantile(index_tab$SPI.INDEX.DIM1, probs=c(1,2,3,4)/5,na.rm=T)"
"0","        brks1 <- append(0,brks1)"
"0","        if (max(brks1)<100) brks1 <- append(brks1,100)"
"0","        "
"0","        brks2 <- quantile(index_tab$SPI.INDEX.DIM2, probs=c(1,2,3,4)/5,na.rm=T)"
"0","        brks2 <- append(0,brks2)"
"0","        if (max(brks2)<100) brks2 <- append(brks2,100)"
"0","        "
"0","        brks3 <- quantile(index_tab$SPI.INDEX.DIM3, probs=c(1,2,3,4)/5,na.rm=T)"
"0","        brks3 <- append(0,brks3)"
"0","        if (max(brks3)<100) brks3 <- append(brks3,100)"
"0","        "
"0","        brks4 <- quantile(index_tab$SPI.INDEX.DIM4, probs=c(1,2,3,4)/5,na.rm=T)"
"0","        brks4 <- append(0,brks4)"
"0","        if (max(brks4)<100) brks4 <- append(brks4,100)"
"0","        "
"0","        brks5 <- quantile(index_tab$SPI.INDEX.DIM5, probs=c(1,2,3,4)/5,na.rm=T)"
"0","        brks5 <- append(0,brks5)"
"0","        if (max(brks5)<100) brks5 <- append(brks5,100)"
"0","        "
"0","        #make nice looking table"
"0","        index_tab <- index_tab %>%"
"0","          filter(country %in% mna_list)"
"0","        "
"0","      #make nice looking"
"0","      index_tab <- index_tab %>%"
"0","        arrange(country) %>%"
"0","        flextable() %>%"
"0","        add_header_lines('SPI overall score in 2019 and Dimension Scores.') %>%"
"0","        set_header_labels(values=list("
"0","                             country=""Country"","
"0","                             SPI.INDEX=""SPI overall score"","
"0","                             SPI.INDEX.DIM1=""Dim 1: Data Use"","
"0","                             SPI.INDEX.DIM2=""Dim 2: Data Services"","
"0","                             SPI.INDEX.DIM3=""Dim 3: Data Products "","
"0","                             SPI.INDEX.DIM4=""Dim 4: Data Sources"","
"0","                             SPI.INDEX.DIM5=""Dim 5: Data Infrastructure"""
"0","                                         )) %>%"
"0","          bg(j = c('SPI.INDEX'),"
"0","             bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE)) %>%"
"0","          bg(j = c('SPI.INDEX.DIM1'),"
"0","             bg = scales::col_bin(col_palette2, domain=c(0,100), bins=brks1, reverse=TRUE)) %>%"
"0","          bg(j = c('SPI.INDEX.DIM2'),"
"0","             bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks2, reverse=TRUE)) %>%"
"0","          bg(j = c('SPI.INDEX.DIM3'),"
"0","             bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks3, reverse=TRUE)) %>%"
"0","          bg(j = c('SPI.INDEX.DIM4'),"
"0","             bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks4, reverse=TRUE)) %>%"
"0","          bg(j = c('SPI.INDEX.DIM5'),"
"0","             bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks5, reverse=TRUE))"
"0","      "
"0","      index_tab"
