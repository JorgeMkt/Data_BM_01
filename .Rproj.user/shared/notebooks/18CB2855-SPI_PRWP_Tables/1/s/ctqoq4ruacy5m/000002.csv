"0",""
"0",""
"0",""
"0","  elephant_stacked_df <- SPI %>%"
"0","    select(country, iso3c, date, starts_with('SPI.INDEX')) %>%"
"0","    group_by(country, date) %>%"
"0","    mutate(row = row_number()) %>%"
"0","    pivot_wider(names_from=date,"
"0","                values_from=starts_with('SPI.INDEX')) %>%"
"0","    ungroup() %>%"
"0","    mutate(overall_growth=(SPI.INDEX_2019-SPI.INDEX_2016),"
"0","           dim1_growth=(SPI.INDEX.DIM1_2019-SPI.INDEX.DIM1_2016),"
"0","           dim2_growth=(SPI.INDEX.DIM2_2019-SPI.INDEX.DIM2_2016),"
"0","           dim3_growth=(SPI.INDEX.DIM3_2019-SPI.INDEX.DIM3_2016),"
"0","           dim4_growth=(SPI.INDEX.DIM4_2019-SPI.INDEX.DIM4_2016),"
"0","           dim5_growth=(SPI.INDEX.DIM5_2019-SPI.INDEX.DIM5_2016)"
"0","           ) %>%"
"0","    filter(!(is.na(SPI.INDEX_2019) | is.na(SPI.INDEX_2016))) %>%"
"0","    mutate(spi_rank=100*rank(SPI.INDEX_2016)/length(SPI.INDEX_2016),"
"0","           spi_bins=case_when( #calculate deciles"
"0","             between(spi_rank,0,10) ~ ""1st Decile"","
"0","             between(spi_rank,10,20) ~ ""2nd Decile"","
"0","             between(spi_rank,20,30) ~ ""3rd Decile"","
"0","             between(spi_rank,30,40) ~ ""4th Decile"","
"0","             between(spi_rank,40,50) ~ ""5th Decile"","
"0","             between(spi_rank,50,60) ~ ""6th Decile"","
"0","             between(spi_rank,60,70) ~ ""7th Decile"","
"0","             between(spi_rank,70,80) ~ ""8th Decile"","
"0","             between(spi_rank,80,90) ~ ""9th Decile"","
"0","             between(spi_rank,90,100) ~ ""Top Decile"""
"0","           )) %>%"
"0","    arrange(spi_rank)"
"0","  "
"0","  #summarise into decile bins"
"0","  elephant_stacked_df <- elephant_stacked_df %>%"
"0","    mutate(spi_bins=factor(spi_bins, levels=unique(elephant_stacked_df$spi_bins))) %>%"
"0","    group_by(spi_bins) %>%"
"0","    summarise("
"0","              D1=mean(dim1_growth),"
"0","              D2=mean(dim2_growth),"
"0","              D3=mean(dim3_growth),"
"0","              D4=mean(dim4_growth),"
"0","              D5=mean(dim5_growth)) %>%"
"0","    pivot_longer("
"0","      cols=c('D1', 'D2', 'D3', 'D4', 'D5'),"
"0","      values_to='growth',"
"0","      names_to='dimension'"
"0","    ) %>%"
"0","    mutate(dimension=case_when("
"0","      dimension==""D1"" ~ ""Dimension 1: Data Use"","
"0","      dimension==""D2"" ~ ""Dimension 2: Data Services"","
"0","      dimension==""D3"" ~ ""Dimension 3: Data Products"","
"0","      dimension==""D4"" ~ ""Dimension 4: Data Sources"","
"0","      dimension==""D5"" ~ ""Dimension 5: Data Infrastructure"""
"0","    )) %>%"
"0","    mutate(growth=growth/5) #divide by 5 so that dimension scores sum to overall score.  This puts equal weight on each dimension in the sum"
"0","  "
"0",""
"0",""
"0",""
"0",""
"0",""
"0",""
