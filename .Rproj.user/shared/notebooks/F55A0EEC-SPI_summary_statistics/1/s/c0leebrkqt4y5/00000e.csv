"0",""
"0","#Now map the result"
"0","quality = ""high"""
"0","maps <- wbgmaps::wbgmaps[[quality]]"
"0",""
"0",""
"0","country_metadata <- wbstats::wbcountries()"
"0",""
"0","data = SPI_2019"
"0",""
"0",""
"0",""
"0","spi_mapper <- function(indicator,title_text) {"
"0","  "
"0","  indicator<-enquo(indicator)"
"0",""
"0","  "
"0","  SPI_map <- SPI_2019 %>%"
"0","    mutate(indicator = !! indicator) %>%"
"0","    mutate(indicator = indicator) %>%"
"0","    arrange(-indicator)"
"0","    "
"0","  "
"0","  spi_groups_quantiles <- quantile(SPI_map$indicator, probs=c(1,2,3,4,5)/6,na.rm=T)"
"0","  "
"0","  SPI_map <- SPI_map %>%"
"0","    mutate(spi_groups=case_when("
"0","      between(indicator, spi_groups_quantiles[5],100) ~ ""Advanced-high"","
"0","      between(indicator, spi_groups_quantiles[4],spi_groups_quantiles[5]) ~ ""Advanced-low"","
"0","      between(indicator, spi_groups_quantiles[3],spi_groups_quantiles[4]) ~ ""Intermediate-high"","
"0","      between(indicator, spi_groups_quantiles[2],spi_groups_quantiles[3]) ~ ""Intermediate-low"","
"0","      between(indicator, spi_groups_quantiles[1],spi_groups_quantiles[2]) ~ ""Emerging-high"","
"0","      between(indicator, 0,spi_groups_quantiles[1]) ~ ""Emerging-low"""
"0","      "
"0","    )) %>%"
"0","    mutate(spi_groups=factor(spi_groups, "
"0","                             levels=c(""Advanced-high"",""Advanced-low"",""Intermediate-high"",""Intermediate-low"",""Emerging-high"", ""Emerging-low""  )))  %>% "
"0","    select(iso3c, spi_groups, indicator) %>%"
"0","    right_join(country_list)  "
"0","  "
"0","  #set color pallete"
"0","  col_pal <- c(""#1A9850"",  ""#66BD63"", ""#E4ED40"", ""#FFFF8C"",  ""#FC7F60"",""#D73027"" )"
"0","  names(col_pal) <- c(""Advanced-high"",""Advanced-low"",""Intermediate-high"",""Intermediate-low"",""Emerging-high"", ""Emerging-low""  )"
"0","  "
"0","  ggplot() +"
"0","    geom_map(data = SPI_map, aes(map_id = iso3c, fill = spi_groups), map = maps$countries) + "
"0","    geom_polygon(data = maps$disputed, aes(long, lat, group = group, map_id = id), fill = ""grey80"") + "
"0","    geom_polygon(data = maps$lakes, aes(long, lat, group = group), fill = ""white"")  +"
"0","    geom_path(data = maps$boundaries,"
"0","              aes(long, lat, group = group),"
"0","              color = ""white"","
"0","              size = 0.1,"
"0","              lineend = maps$boundaries$lineend,"
"0","              linetype = maps$boundaries$linetype) +"
"0","    scale_x_continuous(expand = c(0, 0), limits = standard_crop_wintri()$xlim) +"
"0","    scale_y_continuous(expand = c(0, 0), limits = standard_crop_wintri()$ylim) +"
"0","    scale_fill_manual("
"0","      name='SPI Score',"
"0","      values=col_pal,"
"0","      na.value='grey'"
"0","    ) +"
"0","    coord_equal() +"
"0","    theme_map(base_size=12) +"
"0","    labs("
"0","      title=str_wrap(title_text,100),"
"0","      caption = 'Source: World Bank. Statistical Performance Indicators'"
"0","    )"
"0",""
"0",""
"0","}"
"0",""
"0","spi_charts  <- function(data, indicator, title) {"
"0","  "
"0"," indicator<-indicator"
"0",""
"0","  map_df <- get(data) %>%"
"0","    filter(date==max(date, na.rm=T)) %>%"
"0","    filter(!(country %in% c('Greenland'))) %>% #drop a few countries for which we do not collect data."
"0","    group_by( country) %>%"
"0","    #summarise(across(!! indicator,last)) %>%"
"0","    rename(data_available=!! indicator) %>%"
"0","    select(country, date, data_available, weights ) %>%"
"0","    right_join(country_metadata) %>%"
"0","    mutate(data_available=if_else(is.na(data_available), as.numeric(NA), as.numeric(data_available)))    "
"0","  "
"0",""
"0","  #add histogram by region "
"0","  p2 <- map_df %>%"
"0","    group_by(region) %>%"
"0","    filter(region!='Aggregates') %>%"
"0","    mutate(Percentage=100*wtd.mean(data_available, weights = weights, na.rm=T),"
"0","           Label = paste(round(Percentage,0))) %>%"
"0","    ggplot(aes(x=Percentage, y=region, fill=region)) +"
"0","      geom_bar(stat=""identity"",position='dodge') +"
"0","      geom_text(aes(label=Label)) +"
"0","      labs("
"0","      title=str_wrap(paste(title, 'By Region', sep="" - ""),100),"
"0","      caption = 'Source: SPI Indicators Raw Data',"
"0","      subtitle= 'Data Point is for last year available (2019)'"
"0","      ) +"
"0","      expand_limits(x=c(0,100)) +"
"0","      theme_bw()"
"0","  "
"0","  #by income"
"0","    income <- c(""Low income"", ""Lower middle income"",""Upper middle income"",""High income"")"
"0",""
"0","    p3 <- map_df %>%"
"0","    group_by(income) %>%"
"0","    filter(region!='Aggregates') %>%"
"0","    mutate(Percentage=100*wtd.mean(data_available, weights=weights, na.rm=T),"
"0","           Label = paste(round(Percentage,0))) %>%"
"0","    ggplot(aes(x=Percentage, y=income, fill=income)) +"
"0","      geom_bar(stat=""identity"",position='dodge') +"
"0","      geom_text(aes(label=Label)) +"
"0","      labs("
"0","      title=str_wrap(paste(title, 'By Income', sep="" - ""),100),"
"0","      caption = 'Source: SPI Indicators Raw Data',"
"0","      subtitle= 'Data Point is for last year available (2019)'"
"0","      ) +"
"0","      scale_y_discrete(limits = income) +"
"0","      expand_limits(x=c(0,100)) +"
"0","      theme_bw()"
"0","    "
"0","  # #add line graph over time"
"0","  p4 <- get(data)  %>%"
"0","    rename(data_available=!! indicator) %>%"
"0","    # right_join(spi_df_empty) %>%"
"0","    group_by( date) %>%"
"0","    mutate(data_available=if_else(is.na(data_available), as.numeric(NA), as.numeric(data_available))) %>%"
"0","    mutate(Percentage=100*mean(data_available, na.rm=T),"
"0","           Label = paste(round(Percentage,0))) %>%"
"0","    ungroup() %>%"
"0","    ggplot(aes(y=Percentage, x=date)) +"
"0","      geom_point() +"
"0","      geom_line(fill='blue') +"
"0","      # geom_text_repel(aes(label=Label)) +"
"0","      labs("
"0","      title=str_wrap(paste(title, 'By Date', sep="" - ""),100),"
"0","      caption = 'Source: SPI Indicators Raw Data'"
"0","      ) +"
"0","    "
"0","      expand_limits(y=c(0,100)) +"
"0","      theme_bw()"
"0","      "
"0"," (p2 / p3) "
"0","    "
"0","}"
"0",""
"0","spi_country_charts  <- function(data, indicator, title) {"
"0","  "
"0","  indicator<-enquo(indicator)"
"0",""
"0","  "
"0","  SPI_map <- SPI_2019 %>%"
"0","    mutate(indicator = !! indicator) %>%"
"0","    mutate(indicator = indicator) %>%"
"0","    arrange(-indicator)"
"0","    "
"0","  "
"0","  spi_groups_quantiles <- quantile(SPI_map$indicator, probs=c(1,2,3,4,5)/6,na.rm=T)"
"0","  "
"0","  SPI_map <- SPI_map %>%"
"0","    mutate(spi_groups=case_when("
"0","      between(indicator, spi_groups_quantiles[5],100) ~ ""Advanced-high"","
"0","      between(indicator, spi_groups_quantiles[4],spi_groups_quantiles[5]) ~ ""Advanced-low"","
"0","      between(indicator, spi_groups_quantiles[3],spi_groups_quantiles[4]) ~ ""Intermediate-high"","
"0","      between(indicator, spi_groups_quantiles[2],spi_groups_quantiles[3]) ~ ""Intermediate-low"","
"0","      between(indicator, spi_groups_quantiles[1],spi_groups_quantiles[2]) ~ ""Emerging-high"","
"0","      between(indicator, 0,spi_groups_quantiles[1]) ~ ""Emerging-low"""
"0","      "
"0","    )) %>%"
"0","    mutate(spi_groups=factor(spi_groups, "
"0","                             levels=c(""Advanced-high"",""Advanced-low"",""Intermediate-high"",""Intermediate-low"",""Emerging-high"", ""Emerging-low""  )))  %>% "
"0","    select(iso3c, spi_groups, indicator) %>%"
"0","    right_join(country_list)  "
"0","  "
"0","  #set color pallete"
"0","  col_pal <- c(""#1A9850"",  ""#66BD63"", ""#E4ED40"", ""#FFFF8C"",  ""#FC7F60"",""#D73027"" )"
"0","  names(col_pal) <- c(""Advanced-high"",""Advanced-low"",""Intermediate-high"",""Intermediate-low"",""Emerging-high"", ""Emerging-low""  )"
"0","  "
"0",""
"0","  p2_alt <- SPI_map %>%"
"0","    ungroup() %>%"
"0","    ggplot(aes(x=indicator, y=region, color=spi_groups)) +"
"0","      geom_point() +"
"0","      geom_text(aes(label=country), position=position_jitter(width=.1,height=.4), check_overlap=T) +"
"0","      labs("
"0","      title=str_wrap(paste(title, 'By Country', sep="" - ""),100),"
"0","      caption = 'Source: SPI Indicators Raw Data',"
"0","      subtitle= 'Data Point is for last year available (2019)'"
"0","      ) +"
"0","      scale_color_manual("
"0","        name='SPI Score',"
"0","        values=col_pal,"
"0","        na.value='grey'"
"0","      ) +"
"0","      expand_limits(x=c(0,100)) +"
"0","      theme_bw() +"
"0","      theme(legend.position = 'top') "
"0","   "
"0","p2_alt"
"0",""
"0","}"
"0",""
"0","lending_charts <- function(data, indicator, title) { "
"0",""
"0",""
"0"," indicator<-indicator"
"0",""
"0","  map_df <- get(data) %>%"
"0","    filter(date==max(date, na.rm=T)) %>%"
"0","    filter(!(country %in% c('Greenland'))) %>% #drop a few countries for which we do not collect data."
"0","    group_by( country) %>%"
"0","    #summarise(across(!! indicator,last)) %>%"
"0","    rename(data_available=!! indicator) %>%"
"0","    select(country, date, data_available, weights ) %>%"
"0","    right_join(country_metadata) %>%"
"0","    mutate(data_available=if_else(is.na(data_available), as.numeric(NA), as.numeric(data_available)))    "
"0","  "
"0",""
"0","  lending_list <- c(""Not classified"", ""IBRD"", ""Blend"", ""IDA"" )"
"0","  "
"0","  p2_alt3 <- map_df %>%"
"0","    ungroup() %>%"
"0","    filter(region!='Aggregates') %>%"
"0","    mutate(Percentage=100*(data_available),"
"0","           Label = paste(round(Percentage,0))) %>%"
"0","    ggplot(aes(x=Percentage, y=lending, color=lending)) +"
"0","      geom_point() +"
"0","      geom_text(aes(label=country), position=position_jitter(width=.1,height=.4), check_overlap=T) +"
"0","      labs("
"0","      title=str_wrap(paste(title, 'By Lending Status', sep="" - ""),100),"
"0","      caption = 'Source: SPI Indicators Raw Data',"
"0","      subtitle= 'Data Point is for last year available (2019)'"
"0","      ) +"
"0","      scale_y_discrete(limits = lending_list) +"
"0","      expand_limits(x=c(0,100)) +"
"0","      theme_bw() +"
"0","      theme(legend.position = 'top') "
"0","   "
"0","p2_alt3 "
"0","  "
"0"," "
"0","}"
"0",""
"0","fcs_charts <- function(data, indicator, title) { "
"0","  #FY21 Fragile and conflict-affected situations (http://pubdocs.worldbank.org/en/888211594267968803/FCSList-FY21.pdf)"
"0","  high_intensity_conflict <- c('Afghanistan', 'Libya', 'Somalia', 'Syrian Arab Republic' )"
"0","  "
"0","  medium_intensity_conflict <- c('Burkina Faso', 'Cameroon','Central African Republic', 'Chad', 'Congo, Dem. Rep.',"
"0","                                 'Iraq','Mali','Mozambique','Myanmar','Niger','Nigeria','South Sudan','Yemen, Rep.')"
"0","  "
"0","  high_institutional_social_fragility <- c('Burundi','Congo, Rep.','Eritrea','Gambia, The','Guinea-Bissau',"
"0","                                           'Haiti','Kosovo','Lao PDR','Lebanon','Liberia','Papua New Guinea',"
"0","                                           'Sudan','Venezuela, RB','West Bank and Gaza','Zimbabwe')"
"0","  "
"0","  small_states <- c('Comoros','Kiribati','Marshall Islands','Micronesia, Fed. Sts.','Solomon Islands','Timor-Leste','Tuvalu')"
"0","  "
"0",""
"0"," indicator<-indicator"
"0",""
"0","  map_df <- get(data) %>%"
"0","    filter(date==max(date, na.rm=T)) %>%"
"0","    filter(!(country %in% c('Greenland'))) %>% #drop a few countries for which we do not collect data."
"0","    mutate(fcs=case_when( #create indicators for Fragile and Conflict-affected Situations"
"0","      country %in% high_intensity_conflict ~ ""High-Intensity Conflict"","
"0","      country %in% medium_intensity_conflict ~ ""Medium-Intensity Conflict"","
"0","      country %in% high_institutional_social_fragility ~ ""High Institutional & Social Fragility"","
"0","      country %in% small_states ~ ""Small States"","
"0","      TRUE ~ ""Non-FCS country"""
"0","    )) %>%"
"0","    group_by( country) %>%"
"0","    #summarise(across(!! indicator,last)) %>%"
"0","    rename(data_available=!! indicator) %>%"
"0","    select(country,fcs, date, data_available, weights ) %>%"
"0","    right_join(country_metadata) %>%"
"0","    mutate(data_available=if_else(is.na(data_available), as.numeric(NA), as.numeric(data_available)))    "
"0","  "
"0",""
"0","  fcs_list <- c(""High-Intensity Conflict"", ""Medium-Intensity Conflict"",""High Institutional & Social Fragility"",""Small States"",""Non-FCS country"")"
"0",""
"0","  p2_alt2 <- map_df %>%"
"0","    ungroup() %>%"
"0","    filter(region!='Aggregates') %>%"
"0","    mutate(Percentage=100*(data_available),"
"0","           Label = paste(round(Percentage,0))) %>%"
"0","    ggplot(aes(x=Percentage, y=fcs, color=fcs)) +"
"0","      geom_point() +"
"0","      geom_text(aes(label=country), position=position_jitter(width=.1,height=.4), check_overlap=T) +"
"0","      labs("
"0","      title=str_wrap(paste(title, 'By Fragile and Conflict-affected Situations (FCS)', sep="" - ""),100),"
"0","      caption = 'Source: SPI Indicators Raw Data',"
"0","      subtitle= 'Data Point is for last year available (2019)'"
"0","      ) +"
"0","      scale_y_discrete(limits = fcs_list) +"
"0","      expand_limits(x=c(0,100)) +"
"0","      theme_bw() +"
"0","      theme(legend.position = 'top') "
"0","   "
"0","p2_alt2 "
"0","  "
"0"," "
"0","}"
"0",""
"0",""
"0","spi_mapper(SPI.INDEX, 'Statistical Performance Indicators -  Overall Scores')"
