"0",""
"0","#Now map the result"
"0","quality = ""high"""
"0","maps <- wbgmaps::wbgmaps[[quality]]"
"0",""
"0",""
"0","country_metadata <- wbstats::wbcountries()"
"0",""
"0","data = SPI_2019"
"0",""
"0",""
"0",""
"0","spi_mapper <- function(indicator,title_text) {"
"0","  "
"0","  indicator<-enquo(indicator)"
"0",""
"0","  "
"0","  SPI_map <- SPI_2019 %>%"
"0","      mutate(indicator = !! indicator) %>%"
"0","      mutate(indicator = indicator) %>%"
"0","      mutate(spi_groups=case_when( #create groupings"
"0","      between(indicator, 90, 100) ~ ""90-100"","
"0","      between( indicator, 80, 90) ~ ""80-90"","
"0","      between( indicator, 70, 80) ~ ""70-80"","
"0","      between( indicator, 60, 70) ~ ""60-70"","
"0","      between( indicator, 50, 60) ~ ""50-60"","
"0","      between( indicator, 40, 50) ~ ""40-50"","
"0","      between( indicator, 30, 40) ~ ""30-40"","
"0","      between( indicator, 20, 30) ~ ""20-30"","
"0","      between( indicator, 10, 20) ~ ""10-20"","
"0","      between( indicator, 0, 10) ~ ""0-10"" "
"0","           )) %>%"
"0","      mutate(spi_groups=factor(spi_groups, levels=c(""0-10"", ""10-20"",""20-30"",""30-40"",""40-50"",""50-60"",""60-70"",""70-80"", ""80-90"", ""90-100"" ))) %>%"
"0","    select(iso3c, spi_groups, indicator) %>%"
"0","    right_join(country_list)"
"0","  "
"0","  "
"0","  "
"0","   ggplot() +"
"0","    geom_map(data = SPI_map, aes(map_id = iso3c, fill = spi_groups), map = maps$countries) + "
"0","    geom_polygon(data = maps$disputed, aes(long, lat, group = group, map_id = id), fill = ""grey80"") + "
"0","    geom_polygon(data = maps$lakes, aes(long, lat, group = group), fill = ""white"")  +"
"0","     geom_path(data = maps$boundaries,"
"0","               aes(long, lat, group = group),"
"0","               color = ""white"","
"0","               size = 0.1,"
"0","               lineend = maps$boundaries$lineend,"
"0","              linetype = maps$boundaries$linetype) +"
"0","    scale_x_continuous(expand = c(0, 0), limits = standard_crop_wintri()$xlim) +"
"0","    scale_y_continuous(expand = c(0, 0), limits = standard_crop_wintri()$ylim) +"
"0","    scale_fill_brewer("
"0","      name='SPI Score',"
"0","      palette='RdYlGn',"
"0","      na.value='grey'"
"0","    ) +"
"0","    coord_equal() +"
"0","    theme_map(base_size=12) +"
"0","    labs("
"0","      title=str_wrap(title_text,100),"
"0","      caption = 'Source: World Bank. Statistical Performance Indicators'"
"0","    )"
"0",""
"0",""
"0","}"
"0",""
"0","spi_charts  <- function(data, indicator, title) {"
"0","  "
"0"," indicator<-indicator"
"0",""
"0","  map_df <- get(data) %>%"
"0","    filter(date==max(date, na.rm=T)) %>%"
"0","    filter(!(country %in% c('Greenland'))) %>% #drop a few countries for which we do not collect data."
"0","    group_by( country) %>%"
"0","    #summarise(across(!! indicator,last)) %>%"
"0","    rename(data_available=!! indicator) %>%"
"0","    select(country, date, data_available ) %>%"
"0","    right_join(country_metadata) %>%"
"0","    mutate(data_available=if_else(is.na(data_available), as.numeric(NA), as.numeric(data_available)))    "
"0","  "
"0",""
"0","  #add histogram by region "
"0","  p2 <- map_df %>%"
"0","    group_by(region) %>%"
"0","    filter(region!='Aggregates') %>%"
"0","    mutate(Percentage=100*mean(data_available, na.rm=T),"
"0","           Label = paste(round(Percentage,0))) %>%"
"0","    ggplot(aes(x=Percentage, y=region, fill=region)) +"
"0","      geom_bar(stat=""identity"",position='dodge') +"
"0","      geom_text(aes(label=Label)) +"
"0","      labs("
"0","      title=str_wrap(paste(title, 'By Region', sep="" - ""),100),"
"0","      caption = 'Source: SPI Indicators Raw Data',"
"0","      subtitle= 'Data Point is for last year available (usually 2019)'"
"0","      ) +"
"0","      expand_limits(x=c(0,100)) +"
"0","      theme_bw()"
"0",""
"0","  #by income"
"0","    p3 <- map_df %>%"
"0","    group_by(income) %>%"
"0","    filter(region!='Aggregates') %>%"
"0","    mutate(Percentage=100*mean(data_available, na.rm=T),"
"0","           Label = paste(round(Percentage,0))) %>%"
"0","    ggplot(aes(x=Percentage, y=income, fill=income)) +"
"0","      geom_bar(stat=""identity"",position='dodge') +"
"0","      geom_text(aes(label=Label)) +"
"0","      labs("
"0","      title=str_wrap(paste(title, 'By Income', sep="" - ""),100),"
"0","      caption = 'Source: SPI Indicators Raw Data',"
"0","      subtitle= 'Data Point is for last year available (usually 2019)'"
"0","      ) +"
"0","      expand_limits(x=c(0,100)) +"
"0","      theme_bw()"
"0","    "
"0","  # #add line graph over time"
"0","  p4 <- get(data)  %>%"
"0","    rename(data_available=!! indicator) %>%"
"0","    # right_join(spi_df_empty) %>%"
"0","    group_by( date) %>%"
"0","    mutate(data_available=if_else(is.na(data_available), as.numeric(NA), as.numeric(data_available))) %>%"
"0","    mutate(Percentage=100*mean(data_available, na.rm=T),"
"0","           Label = paste(round(Percentage,0))) %>%"
"0","    ungroup() %>%"
"0","    ggplot(aes(y=Percentage, x=date)) +"
"0","      geom_point() +"
"0","      geom_line(fill='blue') +"
"0","      # geom_text_repel(aes(label=Label)) +"
"0","      labs("
"0","      title=str_wrap(paste(title, 'By Date', sep="" - ""),100),"
"0","      caption = 'Source: SPI Indicators Raw Data'"
"0","      ) +"
"0","      expand_limits(y=c(0,100)) +"
"0","      theme_bw()"
"0","      "
"0"," (p2 + p3) "
"0","    "
"0","}"
"0",""
"0",""
"0","spi_mapper(SPI.INDEX, 'Statistical Performance Indicators -  Overall Scores')"
