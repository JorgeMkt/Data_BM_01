"0",""
"0","#HCI"
"0","hci_df <- wbstats::wb_data(country=""countries_only"", "
"0","              indicator='HD.HCI.OVRL',"
"0","              start_date=2016,"
"0","              end_date=2019,"
"0","              return_wide = F) %>%"
"0","  left_join(select(comparison_df,iso3c,date, region,SPI.INDEX,SCI)) #merge on SPI Index data"
"0",""
"0","#get the correlation for 2019"
"0","hci_df_2018 <- hci_df %>%"
"0","  filter(date==2018) "
"0",""
"0","hci_df_2018_chart <- hci_df_2018 %>%"
"0","    pivot_longer("
"0","    cols = c('SPI.INDEX', 'SCI'),"
"0","    names_to='alt_index',"
"0","    values_to='index_values'"
"0","  ) %>%"
"0","  mutate(alt_index=if_else(alt_index==""SCI"",""SCI"",""SPI Index""))"
"0",""
"0",""
"0",""
"0","hci_spi <- ggplot(data=hci_df_2018, aes(x=value, y=SPI.INDEX)) +"
"0","  facet_wrap(~ indicator) +"
"0","  geom_text(aes(label=iso3c)) +"
"0","  geom_smooth(method='lm') +"
"0","  theme_bw() +"
"0","  ylab('Index value') +"
"0","  xlab('Human Capital Index') +"
"0","  stat_poly_eq(aes(label  = paste(stat(eq.label),"
"0","                                stat(rr.label), sep = ""*\"", \""*"")), "
"0","                     label.x.npc = ""right"", label.y.npc = 0.1,"
"0","                     formula = 'y~x', parse = TRUE, size = 4) +"
"0","    theme(legend.position = 'bottom')"
"0",""
"0",""
"0","hci_spi2 <- ggplot(data=hci_df_2018_chart, aes(x=value, y=index_values, color=alt_index)) +"
"0","  geom_point() +"
"0","  geom_smooth(method='lm') +"
"0","  theme_bw() +"
"0","  ylab('Index value') +"
"0","  xlab('Human Capital Index') +"
"0","  labs("
"0","    color='Index'"
"0","  ) +"
"0","  ggtitle(""SCI & SPI Index on Human Capital Index"") +"
"0","  stat_poly_eq(aes(label  = paste(stat(eq.label),"
"0","                                stat(rr.label), sep = ""*\"", \""*"")), "
"0","                     label.x = ""right"", label.y = 'bottom',"
"0","                     formula = 'y~x', parse = TRUE, size = 4) +"
"0","    theme(legend.position = 'bottom')"
"0","#GDP"
"0","gdp_df <- wbstats::wb_data("
"0","  indicator='NY.GDP.PCAP.KD',"
"0","  start_date=2016,"
"0","  end_date=2019,"
"0","  return_wide = F"
"0","    ) %>%"
"0","  left_join(select(comparison_df,iso3c,date, region,SPI.INDEX,SCI)) #merge on SPI Index data"
"0",""
"0","#get the correlation for 2019"
"0","gdp_df_2019 <- gdp_df %>%"
"0","  filter(date==2019) "
"0",""
"0","gdp_df_2019_chart <- gdp_df_2019 %>%"
"0","    pivot_longer("
"0","    cols = c('SPI.INDEX', 'SCI'),"
"0","    names_to='alt_index',"
"0","    values_to='index_values'"
"0","  ) %>%"
"0","  mutate(alt_index=if_else(alt_index==""SCI"",""SCI"",""SPI Index""))"
"0",""
"0","  gdp_spi <- ggplot(data=gdp_df_2019, aes(x=value, y=SPI.INDEX)) +"
"0","  facet_wrap(~indicator) +"
"0","  geom_text(aes(label=iso3c)) +"
"0","  geom_smooth(method='lm') +"
"0","  scale_x_log10(labels = scales::comma) +"
"0","  theme_bw() +"
"0","  ylab('Index value') +"
"0","  xlab('Log GDP Per Capita') +"
"0","  theme(legend.position = 'bottom') +"
"0","  stat_poly_eq(aes(label = paste(stat(eq.label),"
"0","                                stat(rr.label), sep = ""*\"", \""*"")), "
"0","                     label.x.npc = ""right"", label.y.npc = 0.1,"
"0","                     formula = 'y~x', parse = TRUE, size = 4)"
"0","  "
"0","  gdp_spi2 <- ggplot(data=gdp_df_2019_chart, aes(x=value, y=index_values, color=alt_index)) +"
"0","  geom_point() +"
"0","  geom_smooth(method='lm') +"
"0","  scale_x_log10(labels = scales::comma) +"
"0","  theme_bw() +"
"0","  ylab('Index value') +"
"0","  xlab('Log GDP Per Capita') +"
"0","  ggtitle(""SCI & SPI Index on Log GDP per Capita"") +"
"0","  labs("
"0","    color='Index'"
"0","  ) +"
"0","  theme(legend.position = 'bottom') +"
"0","  stat_poly_eq(aes(label = paste(stat(eq.label),"
"0","                                stat(rr.label), sep = ""*\"", \""*"")), "
"0","                     label.x = ""right"", label.y= 'bottom',"
"0","                     formula = 'y~x', parse = TRUE, size = 4)"
"0",""
"0",""
"0","corr_hci_2018 <- cor(hci_df_2018$value,hci_df_2018$SPI.INDEX, use='pairwise.complete.obs')"
"0",""
"0",""
"0","corr_2019 <- cor(log(gdp_df_2019$value),gdp_df_2019$SPI.INDEX, use='pairwise.complete.obs')"
"0","corr_2019_nontrans <- cor(gdp_df_2019$value,gdp_df_2019$SPI.INDEX, use='pairwise.complete.obs')"
"0",""
