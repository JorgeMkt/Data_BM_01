"0",""
"0",""
"0","#colors"
"0","col_palette <- c(""#2ec4b6"", ""#acece7"", ""#f1dc76"",  ""#ffbf69"",""#ff9f1c""   )"
"0",""
"0","col_palette2 <- c(""#2ec4b6"",  ""#f1dc76"", ""#ff9f1c"" )"
"0",""
"0","#make the table"
"0","index_tab_time <- spi_index_df %>%"
"0","  select(country, date, SPI.INDEX) %>%"
"0","  mutate(SPI.INDEX=round(SPI.INDEX,1)) %>%"
"0","  filter(!is.na(SPI.INDEX)) %>%"
"0","  pivot_wider("
"0","    names_from=date,"
"0","    values_from=SPI.INDEX,"
"0","    names_prefix='SPI.INDEX.'"
"0","  )"
"0",""
"0","#make nice looking"
"0","index_tab_time <- index_tab_time %>%"
"0","  flextable() %>%"
"0","  add_header_lines('SPI overall scores over time') %>%"
"0","  set_header_labels(values=list("
"0","                       country=""Country"", "
"0","                       SPI.INDEX.2019=""2019"","
"0","                       SPI.INDEX.2018=""2018"","
"0","                       SPI.INDEX.2017=""2017"","
"0","                       SPI.INDEX.2016=""2016"""
"0","                                   )) %>%"
"0","    bg(j = c('SPI.INDEX.2019'), "
"0","       bg = scales::col_quantile(col_palette, domain=NULL, n=5, reverse=TRUE)) %>%"
"0","    bg(j = c('SPI.INDEX.2018'),"
"0","       bg = scales::col_quantile(col_palette, domain=NULL, n=5, reverse=TRUE)) %>%"
"0","    bg(j = c('SPI.INDEX.2017'),"
"0","       bg = scales::col_quantile(col_palette, domain=NULL, n=5, reverse=TRUE)) %>%"
"0","    bg(j = c('SPI.INDEX.2016'),"
"0","       bg = scales::col_quantile(col_palette, domain=NULL, n=5, reverse=TRUE)) "
"0",""
"0","  "
"0",""
"0","FitFlextableToPage(index_tab_time)"
