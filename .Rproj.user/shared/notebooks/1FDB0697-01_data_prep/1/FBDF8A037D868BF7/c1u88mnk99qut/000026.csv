"0",""
"0","cs_fun  <- function(data, input_var) {"
"0","  "
"0","  data <- data"
"0","  input_var <- input_var"
"0",""
"0","  #read in csv file."
"0","  cs_df <- read_csv(file = paste(raw_dir, '/4.1_SOCS/', data, "".csv"", sep="""" )) %>%"
"0","    group_by(iso3c, country) %>% "
"0","    rename(input_var = !! input_var) %>%"
"0","    nest() %>% # The next chunk of code will split our string with the years of the census (i.e. ""2000, 2010"") in to separate rows.  We will then aggregate up."
"0","    mutate("
"0","      temp_col = map("
"0","        data, "
"0","        ~ str_extract_all(.x$input_var, ""\\d{4}"") %>% "
"0","          flatten() %>% "
"0","          map_chr(~return(.x)) %>% "
"0","          as_tibble()"
"0","      )"
"0","    ) %>% "
"0","    unnest(keep_empty = TRUE) %>% # Now we have a database with the observations equal to Country*Census observations.  From here we can calculate latest census, etc."
"0","    mutate(indicator_date=as.numeric(value)) "
"0","  "
"0","  "
"0","  "
"0","  #Now calculate our SPI score for this indicator"
"0","  for (i in 2016:2019) {"
"0","   temp <- cs_df %>%"
"0","    mutate(date=i) %>%"
"0","    mutate(recency_indicator=((date>indicator_date)) ) %>% #restrict to censuses that do not occur after reference date"
"0","    mutate(indicator_date=if_else(recency_indicator==TRUE, indicator_date, as.numeric(NA))) %>%"
"0","    group_by(iso3c, country, date, database_last_updated, input_var ) %>%"
"0","    summarise(last_val=max(indicator_date, na.rm=T)) %>%"
"0","    mutate(indicator=case_when("
"0","      (date-last_val<=10) & (date-last_val>0) ~ 1,"
"0","      (date-last_val<=20) & (date-last_val>0) ~ 0.5,"
"0","      TRUE ~ 0 )"
"0","    )  %>%"
"0","     ungroup() %>%"
"0","    select(c('iso3c', 'country', 'date', 'input_var', 'indicator')  ) %>%"
"0","    arrange(date, country)"
"0",""
"0",""
"0","    assign(paste('temp',i,sep=""_""), temp)"
"0","  }"
"0",""
"0","  bind_rows(temp_2016, temp_2017, temp_2018, temp_2019)"
"0",""
"0","  "
"0","}"
"0",""
"0","cs_df <-cs_fun('D2.1.CEN.POPU', 'POPU.CENSUS') %>%"
"0","  rename(POPU.CENSUS=input_var,"
"0","         SPI.D4.1.POPU=indicator)"
"0",""
"0",""
"0",""
"0",""
