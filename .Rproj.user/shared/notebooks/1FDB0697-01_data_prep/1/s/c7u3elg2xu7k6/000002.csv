"0",""
"0","#read data"
"0","aspire_df_raw <- read_csv(paste(raw_dir, '4.2_SOAD','ASPIRE_sources.csv', sep=""/""))"
"0",""
"0","#cleaning of aspire data"
"0","aspire_df <- aspire_df_raw %>%"
"0","    mutate(date=as.numeric(year)) %>%"
"0","    filter(!is.na(date)) %>%"
"0","    group_by( ccode, date) %>%"
"0","    summarise(ben_count_avail=(!is.na(mean(ben, na.rm=T))),"
"0","              ben_exp_avail=(!is.na(mean(exp_b, na.rm=T)))) %>%"
"0","    rename(iso3c=ccode) %>%"
"0","    left_join(country_metadata) %>%"
"0","    mutate(ben_info_avail=(ben_count_avail==TRUE | ben_exp_avail==TRUE)"
"0","           )"
"0",""
"0","write_excel_csv(aspire_df, paste(output_dir, 'SPL_admin_data_availability.csv', sep=""/""))"
"0",""
"0","#create 5 year moving average"
"0","aspire_fun <- function(date_start, date_end) {"
"0","  temp <- aspire_df %>%"
"0","      filter(between(date,date_start,date_end) ) %>%  "
"0","      group_by(iso3c, country) %>%"
"0","      mutate(ben_info_avail=if_else(ben_info_avail==TRUE,as.numeric(ben_info_avail), 0)) %>%"
"0","      summarise(ben_info_avail=round(mean(ben_info_avail),1) #get an average of this across countries"
"0","              ) %>%"
"0","      mutate(SPI.D4.2.1.SPL=if_else(is.na(ben_info_avail),0, ben_info_avail),"
"0","            RAW.D4.2.1.SPL=ben_info_avail) %>%"
"0","      mutate(date=date_end) %>%"
"0","      select(c('iso3c', 'country', 'date', 'RAW.D4.2.1.SPL', 'SPI.D4.2.1.SPL')  )"
"0","      "
"0","  "
"0",""
"0","}"
"0",""
"0",""
"0",""
"0","####"
"0","# X Year moving average"
"0","####"
"0","#create this database for each year from 2004 to 2019 using a X year average"
"0","for (i in c(2004:2019)) {"
"0","  "
"0","  start=i-(window-1)"
"0","  end=i"
"0","  "
"0","  temp_df <- aspire_fun(start,end)"
"0","  assign(paste('aspire_',end, sep=""""), temp_df)"
"0","}"
"0",""
"0","if (exists('aspire_df')) {"
"0","  rm('aspire_df')"
"0","}"
"0","#now append together and save"
"0","for (i in c(2004:2019)) {"
"0","  "
"0","  temp<-get(paste('aspire_',i, sep=""""))"
"0","  "
"0","  if (!exists('aspire_df')) {"
"0","    aspire_df<-temp"
"0","  } else {"
"0","    aspire_df<-aspire_df %>%"
"0","      bind_rows(temp) %>%"
"0","      arrange(-date, iso3c)"
"0","  }"
"0","}"
"0",""
"0",""
"0","#add to spi databases"
"0","spi_df <- spi_df %>%"
"0","  left_join(aspire_df)"
"0",""
"0","aspire_map <- aspire_df"
"0",""
"0","spi_mapper('aspire_map', 'SPI.D4.2.1.SPL', 'Administrative Data Available on Beneficiary Counts or Expenditures using ASPIRE' )"
