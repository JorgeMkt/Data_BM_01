"0",""
"0","#get data directly from WDI metadata.  Vintages are stored in metadata folder"
"0","# Request_metadata <- GET(url = ""https://api.worldbank.org/v2/sources/2/country/all/metadata?per_page=30000&format=json"")"
"0","# Response_metadata <- content(Request_metadata, as = ""text"", encoding = ""UTF-8"")"
"0","# "
"0","# # Parse the JSON content and convert it to a data frame."
"0","# JSON_metadata <- jsonlite::fromJSON(Response_metadata, flatten = TRUE) %>%"
"0","#   data.frame()"
"0","# "
"0","# #do some conversion to produce a dataframe"
"0","# df <- JSON_metadata$source.concept %>%"
"0","#   data.frame() "
"0","# "
"0","# #do some more cleaning and conversion"
"0","# df <- df$variable %>%"
"0","#   data.frame()   %>%"
"0","#   rename(iso3c=id) %>%"
"0","#   unnest(metatype) %>%"
"0","#   pivot_wider("
"0","#     id_cols=iso3c,"
"0","#     names_from=id,"
"0","#     values_from=value"
"0","#   ) "
"0",""
"0","df <- WDI_metadata"
"0",""
"0","# Manipulate and clean final data"
"0","df <- df %>%"
"0","  filter(!is.na(Income.Group))  #keep just countries (drop aggregations)"
"0","  "
"0","df$SPI.D4.2.3.CRVS<-as.numeric(grepl(""Yes"", df$Vital.registration.complete)) #create 0,1 variable for vital registration"
"0",""
"0","crvs_df <- df %>%"
"0","  mutate(iso3c=if_else(is.na(Country.Code), Code, Country.Code),"
"0","         country=Table.Name,"
"0","         RAW.D4.2.3.CRVS=Vital.registration.complete) %>%"
"0","  select(c('iso3c', 'country', 'date', 'RAW.D4.2.3.CRVS', 'SPI.D4.2.3.CRVS')  )"
"0",""
"0",""
"0","#pull old data from SCI"
"0","Request_metadata <- GET(url = ""http://api.worldbank.org/v2/country/all/indicator/3.11.01.03.popreg?format=json&date=2004:2015&per_page=5000"")"
"0","Response_metadata <- content(Request_metadata, as = ""text"", encoding = ""UTF-8"")"
"0",""
"0","# Parse the JSON content and convert it to a data frame."
"0","crvs_df2 <- jsonlite::fromJSON(Response_metadata, flatten = TRUE) %>%"
"0","  data.frame() %>%"
"0","  transmute("
"0","    iso3c=countryiso3code,"
"0","    country=country.value,"
"0","    date=as.numeric(date),"
"0","    crvs=value"
"0","  ) %>%"
"0","  mutate(SPI.D4.2.3.CRVS=as.numeric(crvs),"
"0","         RAW.D4.2.3.CRVS=as.character(crvs)) %>%"
"0","  left_join(spi_df_empty) #add on country metadata"
"0",""
"0",""
"0","# Manipulate and clean final data"
"0","crvs_df2 <- crvs_df2 %>%"
"0","  filter(!is.na(income)) %>% #keep just countries (drop aggregations)"
"0","  select(c('iso3c', 'country', 'date', 'RAW.D4.2.3.CRVS', 'SPI.D4.2.3.CRVS')  )"
"0",""
"0","#join updated data with SCI data"
"0","crvs_df <- crvs_df %>%"
"0","  bind_rows(crvs_df2)"
"0",""
"0","#add to spi databases"
"0","spi_df <- spi_df %>%"
"0","  left_join(crvs_df)"
"0",""
"0",""
"0","crvs_map <- crvs_df "
"0",""
"0","spi_mapper('crvs_map', 'SPI.D4.2.3.CRVS', 'Complete Civil Registration & Vital Statistics Data Available According to WDI' )"
