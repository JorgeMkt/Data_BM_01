"0",""
"0","# create index dataset"
"0","spi_index_df <- spi_df %>%"
"0","  select(country, iso3c, date, starts_with(""SPI""), income, region) %>%"
"0","  right_join(spi_df_empty) %>%"
"0","  left_join(pop_df) %>%"
"0","  arrange(-date,country)"
"2","Joining, by = c(""country"", ""iso3c"", ""date"", ""income"", ""region"")
"
"2","Joining, by = c(""country"", ""date"")
"
"0","#Drop certain indicators that don't make cut because of imcomplete coverage usually"
"0","spi_index_df <- spi_index_df %>%"
"0","  select(-starts_with('SPI.D1'), -SPI.D5.3.DISK, -SPI.D4.3.GEO.second.admin.level,-SPI.D5.1.DILG,-SPI.D5.5.DIFI)"
"0",""
"0",""
"0",""
"0","#get a list of oecd countries"
"0","oecd_country_query <-  GET(url = ""https://api.worldbank.org/v2/country?region=OED&format=json"") %>%"
"0","  content(Request_metadata, as = ""text"", encoding = ""UTF-8"") %>%"
"0","  jsonlite::fromJSON( flatten = TRUE) "
"0",""
"0","#do some conversion to produce a dataframe"
"0","oecd_country_df <- oecd_country_query[[2]] %>%"
"0","  as_tibble() "
"0","  "
"0","  "
"0",""
"0",""
"0","#first index "
"0","# just take a simple numeric average acorss all indicators"
"0","# I will forward fill all indicators if they are missing"
"0","spi_index_df <- spi_index_df %>%"
"0","  arrange(country, date) %>%"
"0","  group_by(country) %>%"
"0","  mutate(across(starts_with(""SPI""), na.locf, na.rm=FALSE)) %>%"
"0","  mutate(across(c(""SPI.D2.1.GDDS"",""SPI.D2.4.NADA"",""SPI.D4.1.1.POPU"",""SPI.D4.1.2.AGRI"",""SPI.D4.1.3.BIZZ"",""SPI.D4.1.4.HOUS"",""SPI.D4.1.5.AGSVY"","
"0","                  ""SPI.D4.1.6.LABR"",""SPI.D4.1.7.HLTH"",""SPI.D4.1.8.BZSVY"", ""SPI.D4.2.1.SPL"","
"0","                  ""SPI.D5.2.1.SNAU"", ""SPI.D5.2.2.NABY"", ""SPI.D4.2.4.LBR"", ""SPI.D5.2.1.SNAU"",""SPI.D5.2.2.NABY"",                "
"0","                  ""SPI.D5.2.3.CNIN"", ""SPI.D5.2.4.CPIBY"", ""SPI.D5.2.5.HOUS"", ""SPI.D5.2.6.EMPL"",""SPI.D5.2.7.CGOV"", ""SPI.D5.2.8.FINA"","
"0","                  ""SPI.D5.2.9.MONY"", ""SPI.D5.2.10.GSBP"" ),"
"0","                ~if_else((is.na(.) & (country %in% oecd_country_df$name)),1,.)                )) %>% #fill in the missing values for OECDs with 1s because by participating in OECD these countries have this"
"0","  mutate(SPI.INDEX=rowMeans(across(starts_with(""SPI"")), na.rm=FALSE),"
"0","         SPI.INDEX.DIM2=rowMeans(across(starts_with(""SPI.D2"")), na.rm=FALSE),"
"0","         SPI.INDEX.DIM3=rowMeans(across(starts_with(""SPI.D3"")), na.rm=FALSE),"
"0","         SPI.INDEX.DIM4=rowMeans(across(starts_with(""SPI.D4"")), na.rm=FALSE),"
"0","         SPI.INDEX.DIM5=rowMeans(across(starts_with(""SPI.D5"")), na.rm=FALSE)"
"0","         ) %>% #"
"0","  arrange(-date, SPI.INDEX) %>%"
"0","  select(country, iso3c, date, starts_with('SPI.INDEX'), everything())"
"0",""
"0","spi_mapper('index_1','SPI.INDEX','Overall SPI using Simple Index Averaging Over All Indicators.  Equal Weight for Each Indicator.  Fill Forward/Ignore Missing Values')"
"2","Joining, by = c(""country"", ""iso3c"", ""income"", ""region"", ""iso2c"", ""capital"", ""long"", ""lat"", ""regionID"", ""region_iso2c"", ""adminID"", ""admin_iso2c"", ""admin"", ""incomeID"", ""income_iso2c"", ""lendingID"", ""lending_iso2c"", ""lending"")
"
"2","Ignoring unknown aesthetics: map_id"
"2","Ignoring unknown parameters: fill"
