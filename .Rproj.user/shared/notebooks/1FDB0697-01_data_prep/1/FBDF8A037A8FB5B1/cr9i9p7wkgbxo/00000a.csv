"0",""
"0","#pull SCI values"
"0",""
"0","Request_metadata <- GET(url = ""http://api.worldbank.org/v2/country/all/indicator/IQ.SCI.OVRL?format=json&date=2004:2019&per_page=5000"")"
"0","Response_metadata <- content(Request_metadata, as = ""text"", encoding = ""UTF-8"")"
"0",""
"0","# Parse the JSON content and convert it to a data frame."
"0","sci_df <- jsonlite::fromJSON(Response_metadata, flatten = TRUE) %>%"
"0","  data.frame() %>%"
"0","  transmute("
"0","    iso3c=countryiso3code,"
"0","    country=country.value,"
"0","    date=as.numeric(date),"
"0","    SCI=value"
"0","  ) %>%"
"0","  left_join(spi_df_empty) %>% #add on country metadata"
"0","  filter(!is.na(income)) %>%"
"0","  select(iso3c, country, date, SCI  ) "
"2","Joining, by = c(""iso3c"", ""country"", ""date"")
"
"0","#display top 25"
"0","sci_spi_disp <- index_1 %>%"
"0","  ungroup() %>%"
"0","  filter(date==2019) %>%"
"0","  arrange(-SPI.INDEX) %>%"
"0","  mutate(across(starts_with('SPI.INDEX'),~100*.),"
"0","         across(starts_with('SPI.INDEX'),round,1)) %>%"
"0","  select(country, iso3c, date, starts_with('SPI.INDEX')) %>%"
"0","  left_join(sci_df)"
"2","Joining, by = c(""country"", ""iso3c"", ""date"")
"
"0","DT::datatable(sci_spi_disp, caption='Overall SPI using Simple Index Averaging Over All Indicators.  Equal Weight for Each Indicator.  Fill Forward/Ignore Missing Values',"
"0","                      rownames=TRUE,"
"0","                      colnames = c(""Country"", ""ISO3C"", ""Date"", ""SPI Index Value"","
"0","                                   ""Dimension 2: Data Services"","
"0","                                   ""Dimension 3: Data Products "","
"0","                                   ""Dimension 4: Data Sources"","
"0","                                   ""Dimension 5: Data Infrastructure"","
"0","                                   ""Statistical Capacity Index"""
"0","                                   ),"
"0","                      class='cell-border stripe',"
"0","                      escape = FALSE,"
"0","                      extensions = c ('Buttons', 'FixedHeader'), options=list("
"0","                          dom = 'Bfrtip',"
"0","                          buttons = c('copy', 'csv', 'excel'),"
"0","                          pageLength = 25,"
"0","                          scrollX = TRUE, "
"0","                          paging=FALSE,"
"0","                          ordering=F)) "
