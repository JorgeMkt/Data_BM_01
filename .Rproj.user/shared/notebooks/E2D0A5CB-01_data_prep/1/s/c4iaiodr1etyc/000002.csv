"0","library(povcalnetR) "
"0",""
"0","#the code below is based on public released code by povcalnet team:"
"0","#https://github.com/worldbank/Global_Poverty_Blogs/blob/master/bg_povcalnet_comparability/R/comparability_breaks.R"
"0",""
"0","# some contants"
"0","year_range <- 1990:2020"
"0","metadata_path <- ""https://development-data-hub-s3-public.s3.amazonaws.com/ddhfiles/506801/povcalnet_comparability.csv"""
"0",""
"0","# Load data ---------------------------------------------------------------"
"0",""
"0","metadata <- read_csv(metadata_path)"
"0","cov_lkup <- c(3, 2, 1, 4)"
"0","names(cov_lkup) <- c(""N"", ""U"", ""R"", ""A"")"
"0",""
"0","dat_lkup <- c(2,1)"
"0","names(dat_lkup) <- c(""income"",""consumption"")"
"0",""
"0",""
"0","pcn <- povcalnet()"
"0","pcn$coveragetype <- cov_lkup[pcn$coveragetype]"
"0","pcn$datatype <- dat_lkup[pcn$datatype]"
"0",""
"0","df <- pcn %>%"
"0","  mutate(countrycode=as.character(countrycode)) %>%"
"0","  inner_join(metadata, by = c(""countrycode"", ""year"", ""coveragetype"", ""datatype""))"
"0",""
"0",""
"0","#Now loop from 2016 and 2019, keeping just data inside last 5 years."
"0","for (reference_year in 2004:2019) {"
"0","  "
"0","    #extend the window for more recent years.  For instance, 2019 surveys are reported with a lag, so give them two year grace period"
"0","  if (reference_year==2019) {"
"0","    rec_window=7"
"0","  } else if (reference_year==2018) {"
"0","    rec_window=6"
"0","  } else {"
"0","    rec_window=5"
"0","  }"
"0"," "
"0","  "
"0","  temp_5<-df %>%"
"0","        filter(coveragetype %in% c(3,4)) %>% #keep just nationally representative samples"
"0",""
"0","        mutate(frequency=((reference_year-as.numeric(year))<=rec_window) & (reference_year>=as.numeric(year))) %>% "
"0","        filter(frequency==TRUE) %>%"
"0","        group_by(countrycode, comparability) %>% #for each country and comparability type, get number of comparable estimates"
"0","        summarise(SPI.D1.5.POV_5=n())  %>%"
"0","        ungroup() %>%"
"0","        group_by(countrycode) %>% #now get a total by country with the max number of comparable estimates"
"0","        summarise(SPI.D1.5.POV_5=max(SPI.D1.5.POV_5, na.rm=T)) %>%"
"0","        mutate(SPI.D1.5.POV_5=if_else(SPI.D1.5.POV_5>=2,1,0)) %>% #only give point if there is at least two observations that are comparable"
"0","        mutate(date=reference_year,"
"0","                 iso3c=countrycode) %>%"
"0","        left_join(country_metadata) %>%"
"0","        select( country,iso3c, date, starts_with('SPI.D1.5.POV')) "
"0",""
"0","  temp_10<-df %>%"
"0","        filter(coveragetype %in% c(3,4)) %>% #keep just nationally representative samples"
"0","        mutate(frequency=((reference_year-as.numeric(year))<=12) & (reference_year>=as.numeric(year))) %>% "
"0","        filter(frequency==TRUE) %>%"
"0","        group_by(countrycode, comparability) %>% #for each country and comparability type, get number of comparable estimates"
"0","        summarise(SPI.D1.5.POV_10=n())  %>%"
"0","        ungroup() %>%"
"0","        group_by(countrycode) %>% #now get a total by country with the max number of comparable estimates"
"0","        summarise(SPI.D1.5.POV_10=max(SPI.D1.5.POV_10, na.rm=T)) %>%"
"0","        mutate(SPI.D1.5.POV_10=if_else(SPI.D1.5.POV_10>=2,1,0)) %>% #only give point if there is at least two observations that are comparable"
"0","        mutate(date=reference_year,"
"0","                 iso3c=countrycode) %>%"
"0","        left_join(country_metadata) %>%"
"0","        select( country,iso3c, date, starts_with('SPI.D1.5.POV')) "
"0",""
"0","  temp <- temp_5 %>%"
"0","    left_join(temp_10) %>%"
"0","    mutate(SPI.D1.5.POV=case_when("
"0","      SPI.D1.5.POV_5==1 ~ 1,"
"0","      SPI.D1.5.POV_10==1 ~ 0.5,"
"0","      TRUE ~ 0"
"0","    )) %>%"
"0","    select(-SPI.D1.5.POV_5,-SPI.D1.5.POV_10)"
"0","  "
"0","  assign(paste(""D3.1.AKI"",reference_year,sep=""_""), temp)"
"0","}"
"0",""
"0","#now append together and save"
"0","for (i in c(2004:2019)) {"
"0","  "
"0","  temp<-get(paste('D3.1.AKI_',i, sep=""""))"
"0","  "
"0","  if (!exists('D3.1.AKI')) {"
"0","    D3.1.AKI<-temp"
"0","  } else {"
"0","    D3.1.AKI<-D3.1.AKI %>%"
"0","      bind_rows(temp) %>%"
"0","      arrange(-date, iso3c)"
"0","  }"
"0","}"
"0",""
"0",""
"0",""
